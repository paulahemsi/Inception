server {
	listen 443 ssl;
	listen [::]:443 ssl;

    # This defines the server name and the server block that should be used for requests to the server
	server_name DOMAIN_NAME www.DOMAIN_NAME;

    # Our root directive names the root directory for requests to our server.
	root /var/www/phemsi-a/wordpress;

    # The index directive defines the files that will be used as indexes when processing requests to your server.
    index index.php index.html;

    # SSL Settings imports
    include snippets/self-signed.conf;
    include snippets/ssl-params.conf;

    # In this location block, we’ll use a try_files directive to check for files that match individual URI requests. Instead of returning a 404 Not Found status as a default, however, we’ll pass control to WordPress’s index.php file with the request arguments.
	location / {
        root /var/www/phemsi-a/wordpress;
        try_files $uri $uri/ =404;

    }

    # This location block will handle PHP processing and proxy these requests to our wordpress container. Because our WordPress Docker image will be based on the php:fpm image, we will also include configuration options that are specific to the FastCGI protocol in this block. Nginx requires an independent PHP processor for PHP requests: in our case, these requests will be handled by the php-fpm processor that’s included with the php:fpm image. Additionally, this location block includes FastCGI-specific directives, variables, and options that will proxy requests to the WordPress application running in our wordpress container, set the preferred index for the parsed request URI, and parse URI requests.
    location ~ \.php$ {
 		include snippets/fastcgi-php.conf;
		fastcgi_pass wordpress:9000;
    }

    #Error management
	error_log /var/log/nginx/error.log;
	access_log /var/log/nginx/nginx.vhost.access.log;
	error_page 500 502 503 504 /50x.html;
}
